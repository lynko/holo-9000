:: TODO: Integrate the parser and compiler, and use the battery format

|%
  ++  read  |=(tape .*(+< [9 2 [1 read:nock] 0 1]))
  ++  make  |=(tape .*(+< head:nock))
  ++  eval  |=([noun tape] .*(+<- (make +<+)))

  ++  nock
    =>  ~
    |%
      ::  s -> f
      ::
      ++  head
        :+  7  [9 2 [1 read] 0 1]
        :+  7  [[0 2] 7 [0 3] skip]
        :^  6  [3 0 3]  [0 0]
        [9 2 [1 make] [0 2] 1 0]

      ::  [read s] -> [a s']
      ::
      ++  read
        :+  7  [[0 2] 7 [0 3] skip]

        :^  6  [6 [5 [0 6] 1 '.'] [5 [0 14] 1 '.'] 1 1]
          [6 [7 [0 15] nork] [0 0] [1 '.'] 0 15]

        :^  6  [6 [5 [0 6] 1 ':'] [5 [0 14] 1 ':'] 1 1]
          :^  6  [7 [0 15] nork]  [0 0]
          :+  8  [9 2 10 [3 0 15] 0 1]
          :+  8  [9 2 10 [3 0 5] 0 3]
          [[[1 '['] [0 12] 0 4] 0 5]

        :^  6  [7 [[0 6] 1 "_$"] scan]
          [6 [7 [0 7] nork] [0 0] 0 3]

        :^  6  [5 [0 6] 1 '`']
          :^  6  [6 [7 [0 14] latn] [1 0] 7 [[0 14] 1 "`$"] scan]
            :+  8  [9 2 10 [3 0 7] 0 1]
            [[[1 '`'] 0 4] 0 5]
          [0 0]

        :^  6  :^  6  [5 [0 6] 1 ':']
                 [6 [7 [0 14] latn] [1 0] 0 0]
               :^  6  [5 [0 6] 1 '.']
                 [6 [7 [0 14] latn] [1 0] 6 [5 [0 14] 1 '`'] [1 0] 0 0]
               :^  6  [5 [0 6] 1 '?']
                 [6 [7 [0 7] nork] [0 0] 1 0]
               [1 1]
          :+  8  [9 2 10 [3 0 7] 0 1]
          :+  8  [9 2 10 [3 0 5] 0 3]
          :+  8  [9 2 10 [3 0 5] 0 7]
          [[[0 62] [0 28] [0 12] 0 4] 0 5]

        :^  6  [5 [0 6] 1 '[']
          :+  9  2  :_  [[0 2] 0 7]  :-  1
          :+  8  [9 2 0 3]
          :+  7  [10 [5 7 [0 5] skip] 0 1]
          :^  6  [5 [0 10] 1 ']']  [[0 4] 0 11]
          :+  8  [9 2 [0 6] [0 14] 0 5]
          [[[1 '['] [0 12] 0 4] 0 5]

        :^  6  [5 [0 6] 1 '"']
          [7 [0 3] tape]

        :^  6  [5 [0 6] 1 '\'']
          [7 [0 3] 7 tape [[1 '0'] 7 [0 5] crip] 0 3]

       :^  6  [5 [0 6] 1 '{']
         :+  9  2  :_  [[0 2] [1 0] 0 7]  :-  1
         :+  7  [10 [15 7 [0 15] skip] 0 1]
         :^  6  [5 [0 30] 1 '}']
           :^  6  [7 [0 31] nork]  [0 0]
           :+  8  [9 2 [0 6] 0 31]
           [[[1 '{'] [7 [0 30] flop] 0 4] 0 5]
         :+  8  [9 2 [0 6] 0 15]
         [9 2 [0 6] [0 14] [[0 4] 0 30] 0 5]

        :^  6  [5 [0 6] 1 '(']
          :+  8  [9 2 [0 2] 0 7]
          :+  9  2  :_  [[0 6] [[0 4] 1 0] 0 5]  :-  1
          :+  7  [10 [15 7 [0 15] skip] 0 1]
          :^  6  [5 [0 30] 1 ')']
            [[[1 '('] 7 [0 14] flop] 0 31]
          :+  8  [9 2 [0 6] 0 15]
          [9 2 [0 6] [0 14] [[0 4] 0 30] 0 5]

        :^  6  [7 [[0 6] 1 "%+<>^!="] scan]
          :^  6  [7 [0 7] nork]  [0 0]
          :+  8  [9 2 10 [3 0 7] 0 1]
          [[[0 14] 0 4] 0 5]

        :^  6  [7 [0 6] latn]
          :+  9  2  :_  [[1 0] 0 3]  :-  1
          :^  6  [3 0 7]
            :^  6  [5 [0 14] 1 '-']
              :^  6  [6 [7 [0 30] latn] [1 0] 7 [0 30] arab]
                [9 2 [0 2] [[0 14] 0 6] 0 15]
              [0 0]
            :^  6  [6 [7 [0 14] latn] [1 0] 7 [0 14] arab]
              [9 2 [0 2] [[0 14] 0 6] 0 15]
            :^  6  [7 [0 7] nork]  [0 0]
            [[[1 'a'] 7 [0 6] flop] 0 7]
          [[[1 'a'] 7 [0 6] flop] 0 7]

        :^  6  [7 [0 6] arab]
          :^  6  [5 [0 6] 1 '0']
            [6 [7 [0 7] nork] [0 0] [[1 '0'] 1 0] 0 7]
          :+  9  2  :_  [[1 0] 0 3]  :-  1
          :^  6  [3 0 7]
            :^  6  [7 [0 14] arab]
              :^  9  2  [0 2]  :_  [0 15]
              [7 [[7 [[0 14] 1 '0'] sub] 7 [[0 6] 1 10] mul] add]
            :^  6  [7 [0 7] nork]  [0 0]
            [[[1 '0'] 0 6] 0 7]
          :^  6  [7 [0 7] nork]  [0 0]
          [[[1 '0'] 0 6] 0 7]

        [0 0]

      ::  [make a m] -> f
      ::
      ++  make
        :^  6  [5 [0 6] 1 '.']  [1 0 1]
        :^  6  [5 [0 6] 1 '_']  [1 0 0]

        :^  6  [5 [0 6] 1 '$']
          [[1 9] [1 2] [1 0] 7 [[1 0] [1 '$'] 0 7] 7 find half]

        :^  6  [5 [0 12] 1 '0']
          [[1 1] 0 13]

        :^  6  [5 [0 12] 1 '+']  [[1 4] 9 2 [0 2] [0 13] 0 7]
        :^  6  [5 [0 12] 1 '<']  [[1 7] [9 2 [0 2] [0 13] 0 7] 1 0 2]
        :^  6  [5 [0 12] 1 '>']  [[1 7] [9 2 [0 2] [0 13] 0 7] 1 0 3]
        :^  6  [5 [0 12] 1 '^']  [[1 3] 9 2 [0 2] [0 13] 0 7]
        :^  6  [5 [0 12] 1 '!']  :^  [1 6]  [9 2 [0 2] [0 13] 0 7]
                                   [1 1 1]
                                 [1 1 0]
        :^  6  [5 [0 12] 1 '\'']  [[1 1] 0 13]
        :^  6  [5 [0 12] 1 '"']  [[1 1] 0 13]
        :^  6  [5 [0 12] 1 '[']  :-  [9 2 10 [6 0 26] 0 1]
                                 [9 2 10 [6 0 27] 0 1]

        :^  6  [5 [0 12] 1 '%']
          :+  7  [10 [7 [1 '$' 2] 7 [0 7] push] 0 1]
          [[1 9] [1 2] [[1 1] 9 2 10 [6 0 13] 0 1] 1 0 1]

        :^  6  [5 [0 12] 1 '=']
          [[1 7] [9 2 10 [6 0 13] 0 1] 1 5 [0 2] 0 3]

        :^  6  [5 [0 12] 1 '?']
          :^  [1 6]  [9 2 [0 2] [0 26] 0 7]
            [9 2 [0 2] [0 54] 0 7]
          [9 2 [0 2] [0 55] 0 7]

        :^  6  [5 [0 12] 1 '`']
          :+  7  [10 [6 7 [0 6] tick] 0 1]
          :^  6  [5 [0 13] 1 '$']
            [[1 9] [1 2] [1 0] 7 [[0 12] [0 13] 0 7] 7 find half]
          :^  6  [5 [0 26] 1 'a']  [[1 0] 7 [[0 12] [0 13] 0 7] find]
          [0 0]

        :^  6  [5 [0 12] 1 ':']
          :+  [1 8]  [9 2 10 [6 0 54] 0 1]
          [9 2 [0 2] [0 55] [[0 26] 1 2] 7 [0 7] push]

        :^  6  [5 [0 12] 1 '.']
          :+  7  [10 [26 7 [0 26] tick] 0 1]
          :+  [1 7]
            :+  8  [7 [[0 52] [0 53] 0 7] find]
            :^  6  [3 0 2]
              [[1 10] [[0 4] [1 10] [[0 5] 9 2 10 [6 0 118] 0 3] [1 0] 0 4] 1 0 1]
            [[1 10] [[0 2] 9 2 10 [6 0 118] 0 3] 1 0 1]
          [9 2 10 [6 0 55] 0 1]

        :^  6  [5 [0 12] 1 '{']
          :^  6  [5 [0 26] 1 0]
            :+  7  [10 [7 [1 '$' 2] 7 [0 7] push] 0 1]
            [[[1 1] 9 2 10 [6 0 27] 0 1] 1 0 1]
          :+  9  2  :_  [[1 0] 0 1]  :-  1
          :+  7  [10 [31 [1 '$' 2] 7 [[0 122] 7 [0 31] push] 7 give push] 0 1]
          [[[1 1] 9 2 10 [6 0 123] 0 7] [1 1 0] 1 0 1]

        :^  6  [5 [0 12] 1 '(']
          :^  6  [5 [0 27] 1 0]  [[1 9] [1 2] 9 2 10 [6 0 26] 0 1]
          :+  [1 8]
            :+  9  2  :_  [[0 2] [0 27] 0 7]  :-  1
            :^  6  [3 0 29]
              [[9 2 10 [6 0 28] 0 3] 9 2 10 [14 0 29] 0 1]
            [9 2 10 [6 0 28] 0 3]
          :+  7  [10 [7 7 [0 7] push] 0 1]
          [[1 9] [1 2] [1 10] [1 6 0 2] 9 2 10 [6 0 26] 0 1]

        :^  6  [5 [0 12] 1 'a']
          :+  8  [7 [[1 0] 0 3] find]
          [6 [3 0 2] [[1 7] [[1 0] 0 4] [1 0] 0 5] [1 0] 0 2]

        [0 0]

      ::  [a m] -> m'
      ::
      ++  give
        :^  6  [5 [0 4] 1 0]  [0 3]
        :^  6  [5 [0 5] 1 0]  [[[0 4] 1 2] 0 3]
        :+  9  2  :_  [[1 0] 0 1]  :-  1
        :^  6  [5 [0 29] 1 0]  [[[0 28] [1 2] 4 0 6] 0 15]
        :+  7  [10 [6 4 4 7 [[0 6] 1 2] mul] 0 1]
        [[[0 28] [1 2] 0 6] 9 2 10 [14 0 29] 0 1]

      ::  [x y] -> n
      ::
      ++  add
        :^  6  [6 [3 0 2] [1 0] 3 0 3]  [0 0]
        :+  9  2  :_  [[1 0] 0 1]  :-  1
        :^  6  [5 [0 6] 0 14]  [0 15]
        [9 2 [0 2] [4 0 6] [0 14] 4 0 15]

      ::  [x y] -> n
      ::
      ++  sub
        :+  9  2  :_  [[1 0] 0 1]  :-  1
        :^  6  [5 [0 14] 0 15]  [0 6]
        [9 2 [0 2] [4 0 6] [0 14] 4 0 15]

      ::  [x y] -> n
      ::
      ++  mul
        :+  9  2  :_  [[1 0] [1 0] 0 1]  :-  1
        :^  6  [5 [0 14] 0 30]  [0 6]
        [9 2 [0 2] [7 [[0 6] 0 31] add] [4 0 14] 0 15]

      ::  [x y] -> b
      ::
      ++  gte
        :+  9  2  :_  [[1 0] 0 1]  :-  1
        :^  6  [5 [0 6] 0 15]  [1 0]
        :^  6  [5 [0 6] 0 14]  [1 1]
        [9 2 10 [6 4 0 6] 0 1]

      ::  n -> n'
      ::
      ++  half
        :+  9  2  :_  [[1 0] [1 0] 0 1]  :-  1
        :^  6  [6 [5 [0 14] 0 15] [1 0] 5 [4 0 14] 0 15]  [0 6]
        :+  9  2  [[0 2] [4 0 6] [4 4 0 14] 0 15]

      ::  l -> l'
      ::
      ++  flop
        [9 2 [1 6 [3 0 7] [9 2 [0 2] [[0 14] 0 6] 0 15] 0 6] [1 0] 0 1]

      ::  [c s] -> b
      ::
      ++  scan
        :+  9  2  :_  [0 1]  :-  1
        [6 [3 0 7] [6 [5 [0 6] 0 14] [1 0] 9 2 10 [7 0 15] 0 1] 1 1]

      ::  s -> s'
      ::
      ++  skip
        :+  9  2  :_  [0 1]  :-  1
        :^  6  [3 0 3]
          :^  6  [6 [5 [0 6] 1 ' '] [1 0] 5 [0 6] 1 '\0a']
            [9 2 [0 2] 0 7]
          [0 3]
        [0 3]

      ::  [x y c] -> b
      ::
      ++  rang
        :+  9  2  :_  [[1 0] 0 1]  :-  1
        :^  6  [5 [0 6] 0 14]
          :+  9  2  :_  [0 3]  :-  1
          :^  6  [5 [0 6] 0 31]  [1 0]
          :^  6  [5 [0 6] 0 30]  [1 1]
          [9 2 10 [6 4 0 6] 0 1]
        [9 2 10 [6 4 0 6] 0 1]

      ::  c -> b
      ::
      ++  nork
        [6 [3 0 1] [6 [7 [[0 2] 1 " \0a)]}"] scan] [1 1] 1 0] 1 1]

      ::  c -> b
      ::
      ++  latn
        :^  6  [7 [[1 'A'] [1 'Z'] 0 1] rang]  [1 0]
        :^  6  [7 [[1 'a'] [1 'z'] 0 1] rang]  [1 0]
        [1 1]

      ::  c -> b
      ::
      ++  arab
        [7 [[1 '0'] [1 '9'] 0 1] rang]

      ::  c -> n
      ::
      ++  hext
        :^  6  [7 [[1 '0'] [1 '9'] 0 1] rang]  [7 [[0 1] 1 '0'] sub]
        :^  6  [7 [[1 'a'] [1 'f'] 0 1] rang]  [7 [[0 1] 1 'W'] sub]
        [0 0]

      ::  s -> n
      ::
      ++  byte
        [7 [[7 [[1 16] 7 [0 2] hext] mul] 7 [0 6] hext] add]

      ::  [n s] -> [n' s']
      ::
      ++  next
        :+  7  [[7 [[1 10] 0 2] mul] 0 3]
        [[7 [[0 2] 7 [[0 6] 1 '0'] sub] add] 0 7]

      ::  s -> [a s']
      ::
      ++  tape
        :+  9  2  :_  [[1 0] 0 1]  :-  1
        :^  6  [7 [[1 0] [1 31] 0 30] rang]  [0 0]
        :^  6  [7 [[0 30] 1 127] gte]  [0 0]
        :^  6  [5 [0 30] 1 '{']  [0 0]
        :^  6  [5 [0 30] 1 '\\']
          :^  6  [7 [[0 62] 1 "'\"\\\{"] scan]
            [9 2 [0 2] [[0 62] 0 6] [0 14] 0 63]
          [9 2 [0 2] [[7 [0 31] byte] 0 6] [0 14] 0 127]
        :^  6  [5 [0 14] 0 30]  [[[0 14] 7 [0 6] flop] 0 31]
        [9 2 [0 2] [[0 30] 0 6] [0 14] 0 31]

      ::  s -> c
      ::
      ++  crip
        :+  9  2  :_  [[1 0] flop]  :-  1
        :^  6  [3 0 7]
          [9 2 [0 2] [7 [[7 [[4 1 255] 0 6] mul] 0 14] add] 0 15]
        [0 6]

      ::  m -> m'
      ::
      ++  push
        :+  9  2  :_  [0 1]  :-  1
        :^  6  [3 0 3]
          :^  6  [3 0 13]
            [[[0 12] [4 4 7 [[0 26] 1 2] mul] 0 27] 9 2 [0 2] 0 7]
          [[[0 12] 4 4 7 [[0 13] 1 2] mul] 9 2 [0 2] 0 7]
        [1 0]

      ::  e -> [n e']
      ::
      ++  tick
        :+  9  2  :_  [[1 0] 0 1]  :-  1
        :^  6  [3 0 7]
          :^  6  [5 [0 14] 1 '`']  [9 2 [0 2] [4 0 6] 0 15]
          [0 3]
        [0 3]

      ::  [d k m] -> n | n n
      ::
      ++  find
        :+  9  2  :_  [[1 0] 0 1]  :-  1
        :^  6  [5 [0 30] 0 124]
          :^  6  [5 [0 6] 0 14]  [0 125]
          [9 2 10 [6 4 0 6] 10 [31 0 63] 0 1]
        [9 2 10 [31 0 63] 0 1]
    --
--
